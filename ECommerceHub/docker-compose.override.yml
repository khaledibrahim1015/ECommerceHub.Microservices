version: '3.4'
services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
     - "27017:27017"
    volumes:
     - mongo_data:/data/db
    networks:
     - dev

  basketdb:
    container_name: basketdb
    restart: always
    ports:
     - "6379:6379"
    volumes:
     - redis_data:/data/db
    networks:
     - dev

  catalog.api:
    container_name: catalog.api
    environment:      # speciify environment to inject in appsettings 
     - ASPNETCORE_ENVIRONMENT=Development
     - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
     - "DatabaseSettings__DatabaseName=ProductDB"
     - "DatabaseSettings__ProductCollection=Products"
     - "DatabaseSettings__BrandsCollection=Brands"
     - "DatabaseSettings__TypesCollection=Types"
    depends_on:
     - catalogdb
    ports:
     - "9000:80"
     # - "9001:443"
    networks:
     - dev


  basket.api:
   container_name: basket.api
   environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - "Redis__ConnectionString=basketdb:6379"
    - "ASPNETCORE_URLS=http://+:80"
   depends_on:
    - basketdb
   ports:
    - "9001:80"
   networks:
   - dev  

   # Portainer for Containners Management 
  portainer:
   container_name: portainer
   restart: always
   ports:
    - "8080:8000"
    - "9090:9000"
   volumes:
    - portainer_data:/data
    - /var/run/docker.sock:/var/run/docker.sock
